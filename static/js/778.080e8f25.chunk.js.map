{"version":3,"file":"static/js/778.080e8f25.chunk.js","mappings":"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","sources":["fetchApi.jsx","components/Buttons/Buttons.styled.jsx","components/Buttons/Buttons.jsx","pages/Courses.styled.jsx","pages/Courses.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.wisey.app/api/v1`;\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst getToken = async () => {\n  try {\n    const response = await axios.get('auth/anonymous?platform=subscriptions');\n    setAuthHeader(response.data.token);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getInfo = async () => {\n  try {\n    await getToken();\n    const response = await axios.get('/core/preview-courses', {\n      mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n\n    return response.data.courses;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getCourseById = async id => {\n  try {\n    await getToken();\n    const response = await axios.get(`/core/preview-courses/${id}`, {\n      mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import styled from 'styled-components';\nexport const ButtonsSection = styled.div`\n  display: flex;\n\n  gap: 10px;\n  justify-content: center;\n\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  outline: none;\n  background-color: lightblue;\n  border: 1px solid lightblue;\n  border-radius: 10px;\n  width: 150px;\n  height: 50px;\n  font-size: 20px;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #1d89ae;\n    border: 1px solid #1d89ae;\n    color: white;\n  }\n`;\n","import { ButtonsSection, Button } from './Buttons.styled';\nexport const Buttons = ({ setPage, page, maxPage }) => {\n  return (\n    <ButtonsSection>\n      {page !== 0 && (\n        <Button onClick={() => setPage(page - 1)}>Previous page</Button>\n      )}\n      {page === maxPage - 1 ? (\n        ''\n      ) : (\n        <Button onClick={() => setPage(page + 1)}>Next page</Button>\n      )}\n    </ButtonsSection>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const AllItems = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 10px;\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const ListItem = styled.li`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  min-height: 500px;\n\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.14),\n    0px 3px 4px 0px rgba(0, 0, 0, 0.12), 0px 1px 5px 0px rgba(0, 0, 0, 0.2);\n`;\n\nexport const LinkItem = styled(Link)`\n  color: #212121;\n`;\n\nexport const Title = styled.span`\n  font-weight: 500;\n`;\n\nexport const ImageThumb = styled.div`\n  width: 300px;\n  height: 130px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 130px;\n  object-fit: cover;\n`;\nexport const InfoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  margin-top: 5px;\n`;\n","import { useEffect, useState, useRef } from 'react';\n\nimport { getInfo } from '../fetchApi';\n\nimport videojs from 'video.js';\nimport 'video.js/dist/video-js.css';\n\nimport { Buttons } from 'components/Buttons/Buttons';\nimport {\n  AllItems,\n  ListItem,\n  LinkItem,\n  Title,\n  ImageThumb,\n  Image,\n  InfoSection,\n} from './Courses.styled';\n\nconst AllCourses = () => {\n  const [courses, setCourses] = useState([]);\n\n  const [page, setPage] = useState(0);\n  const [maxPage, setMaxPage] = useState(0);\n\n\n  useEffect(() => {\n    try {\n      getInfo().then(data => {\n\n        // sorted by date from newest to oldest\n        // const sortedArray = data.sort((a, b) => Date.parse(b.launchDate) - Date.parse(a.launchDate));\n\n        // sorted from last to first\n        const sortedArray = data.reverse();\n\n        return chunkArray(sortedArray);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const chunkArray = arr => {\n    let results = [];\n    while (arr.length) {\n      results.push(arr.splice(0, 10));\n    }\n    setCourses(results);\n    setMaxPage(results.length);\n  };\n\n\n  const ref = useRef(null);\n\n  const OnHoverImage = ({ img, courseVideoPreview }) => {\n    const [isHovering, setIsHovering] = useState(false);\n\n    return (\n      <>\n        {isHovering && courseVideoPreview ? (\n          <div>\n            <video\n              ref={ref}\n              id=\"my_video\"\n              className=\"video-js\"\n              preload=\"auto\"\n              data-setup=\"{}\"\n              onPlay={() => setIsHovering(true)}\n              onPause={() => setIsHovering(false)}\n              onMouseEnter={() => {\n                window.videojs = videojs;\n\n                const player = videojs(ref.current);\n                player.width(300);\n                player.height('auto');\n                isHovering && player.play();\n              }}\n              onMouseLeave={() => {\n                const player = videojs(ref.current);\n                player.pause();\n              }}\n            >\n              <source src={courseVideoPreview} type=\"application/x-mpegURL\" />\n            </video>\n          </div>\n        ) : (\n          <ImageThumb\n            onMouseEnter={() => setIsHovering(true)}\n            onMouseLeave={() => setIsHovering(false)}\n          >\n            <Image src={img} alt=\"\" width={300} />\n          </ImageThumb>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <AllItems>\n        {courses.length !== 0 &&\n          courses[`${page}`].map(course => (\n            <ListItem key={course.id}>\n              <LinkItem\n                to={`${course.id}`}\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <OnHoverImage\n                  img={course.previewImageLink + '/cover.webp'}\n                  courseVideoPreview={course.meta?.courseVideoPreview?.link}\n                />\n                <div>\n                  <InfoSection>\n                    <Title>Title: </Title>\n                    <span>{course.title}</span>\n                  </InfoSection>\n                  <div>\n                    <Title>Description: </Title>\n                    <span>{course.description}</span>\n                  </div>\n                  <div>\n                    <Title>Lessons Count: </Title>\n                    <span>{course.lessonsCount}</span>\n                  </div>\n\n                  <ul>\n                    <Title>Skills: </Title>\n                    {course.meta?.skills &&\n                      course.meta?.skills.map((skill, index) => {\n                        return <li key={index}>{skill} </li>;\n                      })}\n                  </ul>\n                  <div>\n                    <Title>Course Raiting: </Title>\n                    <span>{course.rating}</span>\n                  </div>\n                </div>\n              </LinkItem>\n            </ListItem>\n          ))}\n      </AllItems>\n      {courses.length !== 0 && (\n        <Buttons setPage={setPage} page={page} maxPage={maxPage} />\n      )}\n    </>\n  );\n};\n\nexport default AllCourses;\n"],"names":["axios","getToken","response","token","data","console","log","getInfo","mode","headers","courses","getCourseById","id","ButtonsSection","styled","Button","Buttons","setPage","page","maxPage","onClick","AllItems","ListItem","LinkItem","Link","Title","ImageThumb","Image","InfoSection","useState","setCourses","setMaxPage","useEffect","then","sortedArray","reverse","chunkArray","error","arr","results","length","push","splice","ref","useRef","OnHoverImage","img","courseVideoPreview","isHovering","setIsHovering","className","preload","onPlay","onPause","onMouseEnter","window","videojs","player","current","width","height","play","onMouseLeave","pause","src","type","alt","map","course","to","style","display","flexDirection","previewImageLink","meta","link","title","description","lessonsCount","skills","skill","index","rating"],"sourceRoot":""}