{"version":3,"file":"static/js/376.12c8c36d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/global/document.js","../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/keycode/index.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/safe-json-parse/tuple.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/@videojs/vhs-utils/es/opus-helpers.js","../node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/video.js/dist/video.es.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js"],"sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.0.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","/*! @name mpd-parser @version 1.0.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.0.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        acc[name].segments.push(...playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  sidxMapping = {},\n  previousManifest\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nconst buildBaseUrls = (referenceUrls, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, {\n        baseUrl\n      })\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.0.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.0.4\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Depreacted, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Depreacted, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the broser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {EventTarget} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {Component~ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing() {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks() {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks() {}\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    const el = createEl('picture', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    }, {}, createEl('img', {\n      loading: 'lazy',\n      crossOrigin: this.crossOrigin()\n    }, {\n      alt: ''\n    }));\n    return el;\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.el_) {\n        // If the poster's element exists, give its value\n        return this.el_.querySelector('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.el_.querySelector('img').crossOrigin = value;\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  setSrc(url) {\n    this.el_.querySelector('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp() {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set contols on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      durationDisplay,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n */\n\nconst addPropertiesToMain = (main, uri) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    const groupId = `placeholder-uri-${mediaType}-${groupKey}-${labelKey}`; // add a playlist array under properties\n\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl);\n  return manifest;\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$2 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    },\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (frameParsers[frame.id]) {\n          // use frame specific parser\n          frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  var window$1 = window_1;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      let loadHandler;\n      const errorHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n        this.stopForError({\n          message: 'Error loading vtt.js'\n        });\n        return;\n      };\n      loadHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n        this.segmentRequestFinished_(error, simpleSegment, result);\n      };\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), this.media());\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      const audioGroup = this.media().attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== this.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: this.media(),\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.0\";\nvar version$3 = \"6.2.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options = {}) {\n    const {\n      vhs: {\n        overrideNative = !videojs.browser.IS_ANY_SAFARI\n      } = {}\n    } = merge(videojs.options, options);\n    const supportedType = simpleTypeFromSourceType(type);\n    const canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.3.4\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n"],"names":["_extends","module","exports","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","__esModule","apply","this","window","require","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","getCharset","headers","decode","e","String","fromCharCode","Uint8Array","isFunction","createXHR","httpHandler","initParams","uri","options","params","_createXHR","Error","called","body","getBody","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","loadFunc","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","result","forEach","row","index","indexOf","slice","Array","isArray","push","parseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","obj","isEmpty","beforeSend","send","array","iterator","forEachArray","toUpperCase","freeze","object","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","TypeError","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","errorImpl","isCallback","Function","build","fn","msg","buildErrorHandler","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","orderedSetReducer","element","toOrderedSet","filter","splitOnASCIIWhitespace","keys","copy","src","dest","p","Class","Super","pt","t","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","n","v","attrs2","_ownerElement","toString","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","get","$$length","set","amp","apos","gt","lt","quot","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","nameStartChar","nameChar","RegExp","tagNamePattern","copyLocator","f","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","charAt","setTagName","closed","match","localNSMap","a","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","end","matchs","exec","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","k","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","tagStart","config","pop","endMatch","locator2","Math","max","getLocalName","doccy","topLevel","global","minDoc","document","win","self","string","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","codes","aliases","isEventKey","event","nameOrCode","title","alias","getUint64","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","Number","MAX_SAFE_INTEGER","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","_defineProperty","enumerable","configurable","writable","_superPropBase","property","getPrototypeOf","_get","Reflect","receiver","desc","getOwnPropertyDescriptor","DEFAULT_LOCATION","baseUrl","relativeUrl","nativeURL","protocolLess","removeLocation","newUrl","URL","href","protocol","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","decodeB64ToUint8Array","b64Text","decodedString","Buffer","from","LineStream","nextNewline","TAB","parseByterange","byterangeString","parseAttributes","ParseStream","customParsers","tagMappers","line","acc","mapper","mappedLine","concat","newLine","tagType","duration","parseFloat","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","expression","customType","dataParser","segment","camelCaseKeys","str","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","lineStream","parseStream","currentMap","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","custom","identifier","missing","chunk","addParser","addTagMapper","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","container","browserSupportsCodec","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_temp","_ref","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2$le","x","byteCount","ceil","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","encodeURIComponent","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","DESCRIPTORS","isObject","merge","objects","values","o","flatten","lists","y","errors","urlTypeToSegment","range","indexRange","resolvedUri","resolveUrl","ranges","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","min","parseByDuration","startNumber","time","toSegments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","reference","size","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","sort","getMediaGroupPlaylists","master","mediaGroupPlaylists","properties","group","label","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","oldManifest","newManifest","oldPlaylists","newPlaylists","findIndex","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","CODECS","AUDIO","SUBTITLES","formatVttPlaylist","m3u8Attributes","formatVideoPlaylist","frameRate","videoOnly","audioOnly","vttOnly","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","captionServices","Boolean","VIDEO","organizedAudioGroup","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","organizeAudioPlaylists","organizedVttGroup","organizeVttPlaylists","playlistTimelineStarts","subs","cc","svcObj","svc","service","channel","aspectRatio","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","textContent","parseDuration","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","prev","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","opt","val","labelVal","keySystem","psshNode","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","parser","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","ID3","getId3Offset","returnSize","getId3Size","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","dependsOnEsId","ocrEsId","descriptors","decodeURIComponent","escape","bytesToString","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","normalizePaths","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","browserApi","isLikely","detectContainerForBytes","version$6","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","history","log$1","createLogger$1","logByType","level","log","lvl","levels","lvlRegExp","window$1","LogByTypeFactory","createLogger","subname","all","debug","info","fname","historyItem","clear","disable","enable","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","ANDROID_VERSION","Obj","__proto__","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","UAD","platform","brands","brand","USER_AGENT","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","throwIfWhitespace","classList","contains","addClass","classesToAdd","add","removeClass","classesToRemove","toggleClass","classToToggle","className","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","unblockTextSelection","getBoundingClientRect","rect","computedStyle","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","videojs$1","Dom","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","_supportsPassive","createStyleElement","style","setTextContent","styleSheet","cssText","DomData","WeakMap","_guid","newGUID","_cleanUpEvents","elem","has","handlers","removeEventListener","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","passiveEvents","guid","hash","handlersCopy","addEventListener","supportsPassive","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","bind","throttle","last","debounce","immediate","cancel","debounced","later","Fn","EventTarget$2","ael","allowedEvents_","Map","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl_","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","contentEl","childFound","compEl","children","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","addChild","isReady_","readyQueue","num","skipListeners","dimension","widthOrHeight","pxIndex","computedWidthOrHeight","rule","currentDimension","focus","blur","keycode","handleKeyDown","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","cancelAnimationFrame","idName","cancelName","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","createTimeRanges$1","registerComponent","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","buildCSSClass","tabIndex","previouslyActiveEl_","localize","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","querySelector","shiftKey","allChildren","querySelectorAll","TrackList","tracks","tracks_","addTrack","labelchange_","rtrack","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","queueTrigger","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","oncue","onparsingerror","onflush","flush","loadTrack","tech_","XHR","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","manualProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","removeTrack","error_","trackListChanges","vtt","script","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","Promise","reject","cb","requestNamedAnimationFrame","cancelNamedAnimationFrame","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","muted","played","seekable","volume","ended","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","mw","mws","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","loading","alt","crossorigin","poster","setSrc","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","changeOrientationEvent","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","selectedLanguage","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","calculateDistance","userSeek_","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","disablePictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","MouseVolumeLevelDisplay","updateVolume","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","handleKeyPress","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","legendId","selectLabelledbyIds","optionId","createElSelect_","innerHTML","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","selectedIndex","setSelectedOption","setValues","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","els","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","proxyNativeTracksForType_","overrideNative_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","head","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","playsinline","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","userActions","click","doubleClick","userWasActive","cancelable","targetPlayer","isFs","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","reduceRight","resolve","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","isRetry","resetRetryOnError_","middlewareSource","src_","handleSrc_","notSupportedMessage","setTech","retry","stopListeningForErrors","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","playerChildren","controlBarHeight","currentHeight","exitPromises","enableAudioOnlyUI_","disableAudioOnlyUI_","enablePosterModeUI_","disablePosterModeUI_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","responsive_","removeCurrentBreakpoint_","reset","artist","artwork","tt","titleBar","currentSources","previousLogLevel_","newRates","baseOptions","tagOptions","dataSetup","safeParseTuple","childName","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","basicPluginWrapper","createBasicPlugin","deprecateForMajor","oldName","newName","warned","deprecate","registerPlugin","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","getAllPlayers","comp","use","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","qualityLevel","getQualityLevelById","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","initPlugin$1","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","EventTarget$1","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","customTagParsers","customTagMappers","llhls","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","onwarn","oninfo","customParser","parseManifest","playlistObject","parseManifest_","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","mainForMedia","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","utils","tagDump","textRanges","getProgramTime","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","_len","buffers","_key","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","parseMainXml","mainXml","srcUrl","parsedManifestInfo","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","fin","requestErrored_","parseSidx","internal","playlistExclusionDuration","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","addSidxSegments_","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","hasPendingRequest","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","oldMain","newMain","noChanges","playlistUpdate","updateMain","location","mpl","mup","createMUPTimeout_","mediaGroupSidx","filterChangedSidxMappings","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","clock$2","coneOfSilence","metaTable","arr","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","newCode","get708CharFromCode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","typedArray","fromIndex","currentIndex","Stream$5","StreamTypes$3","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","owner","privateData","tagSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TimestampRolloverStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","bin","parseType_1","toUnsigned$2","parseType$2","findBox_1","findBox$2","subresults","toUnsigned$1","getUint64$1","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","handleRollover","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","trackIds","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","removeGopBuffer","mapping","updatedBuffer","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","getMediaInfo_","videoBuffered","audioBuffered","storedMap","storedKey","playlist_","couldBeginLoading_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","buffered_","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","earlyAbortWhenNeeded_","checkForAbort_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","timeType","timingInfoProperty","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","getTrackById","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleCaptions_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","handleId3_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","initSegmentForMap","segmentKey","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","processMetadataQueue_","appendData_","changedTimestampOffset","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleQuotaExceededError_","segmentObj","concatSegments","appendBuffer","handleAppendError_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","getInitSegmentAndUpdateState_","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","handleAbort_","handleProgress_","handleTrackInfo_","handleTimingInfo_","handleSegmentTimingInfo_","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","handleTimeout_","saveBandwidthRelatedStats_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","endOfStream","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","hasCreatedSourceBuffers","hasInitializedAnyEme","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","groups","variantLabel","isMainPlaylist","newProps","groupMatch","setupMediaGroups","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","lastTrack","pc","selectPlaylist","fastQualityChange_","setAudio","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","checkABR_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mainMediaInfo","getExpiredTime","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","setDuration","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","areMediaTypesKnown_","createSourceBuffers","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","overrideNativeAudioTracks","overrideNativeVideoTracks","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","appendsToLoadedData_","timeToLoadedData","timeToLoadedData_","currentTech","playerDimensions","currentDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","initializedEme","createKeySessions_","didSetupEmeOptions","excludedHDPlaylists","handleWaitingForKey_","qualityLevels_","addQualityLevel","handleVhsLoadedMetadata","VhsSourceHandler","supportedType","canUseMsePlayback","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","center","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","StringDecoder","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","thisArg","cache","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isString","isNumber","isPlainObject","Symbol","toStringTag","isDate","isFile","isBlob","isFileList","isURLSearchParams","allOwnKeys","findKey","_global","isContextDefined","TypedArray","isTypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isBuffer","isFormData","pattern","FormData","isBoolean","isStream","caseless","assignValue","targetKey","extend","stripBOM","inherits","superConstructor","toFlatObject","destObj","propFilter","merged","endsWith","searchString","toArray","forEachEntry","matchAll","regExp","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","toFiniteNumber","generateString","alphabet","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","AxiosError","toJSON","fileName","customProps","axiosError","isVisitable","removeBrackets","renderKey","dots","token","predicates","formData","metaTokens","indexes","visitor","defaultVisitor","useBlob","convertValue","isFlatArray","exposedHelpers","encode","charMap","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serializedParams","serializeFn","serialize","hashmarkIndex","InterceptorManager","fulfilled","rejected","synchronous","runWhen","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","URLSearchParams","isStandardBrowserEnv","product","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","protocols","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","DEFAULT_CONTENT_TYPE","transitional","transitionalDefaults","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","toURLEncodedForm","formSerializer","_FormData","env","rawValue","stringifySafely","transformResponse","JSONRequested","strictJSONParsing","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","tokensRE","parseTokens","matcher","deleted","deleteHeader","normalized","formatHeader","targets","asStrings","first","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","accessor","transformData","fns","isCancel","__CANCEL__","CanceledError","expires","domain","secure","cookie","toGMTString","read","buildFullPath","requestedURL","combineURLs","originURL","msie","userAgent","urlParsingNode","resolveURL","hostname","port","pathname","requestURL","samplesCount","firstSampleTS","timestamps","tail","chunkLength","startedAt","bytesCount","passed","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","lengthComputable","progressBytes","estimated","knownAdapters","http","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","signal","auth","btoa","fullPath","onloadend","settle","statusText","paramsSerializer","timeoutErrorMessage","xsrfValue","isURLSameOrigin","cookies","onDownloadProgress","onUploadProgress","upload","subscribe","parseProtocol","adapters","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","validators","deprecatedWarnings","validator","formatMessage","assertOptions","schema","allowUnknown","Axios","instanceConfig","interceptors","configOrUrl","contextHeaders","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","promises","spread","isAxiosError","formToJSON"],"sourceRoot":""}